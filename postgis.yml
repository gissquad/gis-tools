---
- hosts: qgis-server
  tasks:
   - command: apt-get install unzip

   - name: Add postgres repository
     apt_repository: repo='deb http://apt.postgresql.org/pub/repos/apt/ {{ansible_distribution_release}}-pgdg main' state=present

   - name: Add postgres repository key
     apt_key: url=http://apt.postgresql.org/pub/repos/apt/ACCC4CF8.asc state=present

   - name: Install postgresql
     apt: pkg=postgresql-9.4 state=present force=yes

   - name: Install PG Packages
     apt: >
       pkg={{item}}
       state=installed
       update-cache=yes
     with_items:
       - build-essential
       - python-dev
       - python-setuptools
       - python-psycopg2
       - postgresql-contrib-9.4
       - postgresql-9.4-postgis-2.1
       - libpq-dev

   - name: postgresql conf
     lineinfile: dest=/etc/postgresql/9.4/main/postgresql.conf state=present regexp="^listen_addresses = \'*\'*" insertbefore="^port = 5432" line="listen_addresses = \'*\'"         # what IP address(es) to listen on;"

   - name: pg_hba.conf
     lineinfile: dest=/etc/postgresql/9.4/main/pg_hba.conf state=present regexp="host    all             all             0.0.0.0/0            md5" insertbefore="^# IPv6 local connections:" line="host    all             all             0.0.0.0/0            md5"

   - name: Start postgresql server
     service: name=postgresql state=restarted enabled=yes

   - name: ensure template_postgis database exists
     become_user: postgres
     postgresql_db: name=template_postgis state=present
     register: createdb_template_postgis

   - name: make template_postgis a template
     become_user: postgres
     command: psql -d template_postgis -c "UPDATE pg_database SET datistemplate=true WHERE datname='template_postgis';"
     when: createdb_template_postgis.changed

   - name: enable postgis extension
     become_user: postgres
     command: psql -d template_postgis -c "CREATE EXTENSION postgis;"
     when: createdb_template_postgis.changed

   - name: Create Database User
     become_user: postgres
     postgresql_user: >
       user={{database.user}}
       password={{database.password}}
       role_attr_flags=CREATEDB,NOSUPERUSER
     tags: database


   - name: Create Geo Database.
     become_user: postgres
     postgresql_db: >
       name={{database.geo_name}}
       owner={{database.user}}
       login_host=localhost
       login_user={{database.user}}
       login_password={{database.password}}
       template=template_postgis
     tags:
       - database
       - create